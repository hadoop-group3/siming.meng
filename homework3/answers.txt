HW3 Part1
---------------------------------------------------------------------------------------------------------------------------------------------
Q1. Solve this problem:
All you know about the winner is that the first name is Brian and he lives in Chicago. Use Hive's
LIKE operator to do a wildcard search for names such as "Bryan” and “Brian”. Remember to filter
on the customer's city.

Query:
hive> SELECT  customer_id, customer_fname, customer_lname, customer_city
    > FROM customers
    > WHERE customer_city = 'Chicago' AND customer_fname LIKE 'Br%';
OK

Outcome:
customer_id	customer_fname	customer_lname	customer_city
2303	Brittany	Smith	Chicago
5002	Bryan	Smith	Chicago
6429	Brian	Wilson	Chicago
9751	Brenda	Pollard	Chicago
Time taken: 2.533 seconds, Fetched: 4 row(s)
hive> 

Q2. There are reports of at least 2 different products with a price of $0. You will now run a
query to identify the products that currently have the lowest prices.
Query:
[cloudera@quickstart ~]$ hive -e 'SELECT product_price, product_name FROM PRODUCTS WHERE product_price = 0 ORDER BY product_price LIMIT 10'

Outcome:
0.0	Nike Men's Hypervenom Phantom Premium FG Socc
0.0	Callaway X Hot Driver

Q3. How many customers ids are in the customers table?
Query:
SELECT count(distinct( concat(customer_street , customer_city, customer_zipcode)))
FROM customers ;

Outcome:
12435

Q4. How many customers ids are in the customers table?
Query:
SELECT   distinct( concat(customer_street , customer_city, customer_zipcode))
FROM customers limit 10;

Outcome:
11508

Q5. Using customer_id, which state has the most customers? Hint: notice, you can group
by one field and then order by another.
Query:
SELECT   count( customer_id) as customer_count,customer_state 
FROM customers
GROUP BY customer_state
ORDER BY customer_count desc;

Outcome:
 	customer_count	customer_state
1	4771	PR
2	2012	CA
3	775		NY
4	635		TX
5	523		IL
6	374		FL
......

Q6. Which top three product_ids had the most orders?
Query:
SELECT  sum( order_item_quantity) as ttl_qty, order_item_product_id as pid, products.product_name as p_name
FROM order_items, products
where order_items.order_item_product_id = products.product_id
GROUP BY  order_item_product_id,  products.product_name
ORDER BY ttl_qty DESC;

Outcome:
 	ttl_qty	pid	p_name
1	73698	365	Perfect Fitness Perfect Rip Deck
2	62956	502	Nike Men's Dri-FIT Victory Golf Polo
3	57803	1014 O'Brien Men's Neoprene Life Vest

Q7.Using the orders_corrected table, count the number of orders (using order_id) that
had a status of COMPLETE, on May 17, 2014. Show your query.
Query:
select count(order_id)
FROM orders_corrected 
WHERE order_status = 'COMPLETE' AND year(order_datestr)=2014 AND month(order_datestr)=5 AND day(order_datestr)=17;

Outcome:
61

Q8. What was Dualcore’s total revenue from completed orders on May 17, 2014? 
Query:
SELECT  sum(order_item_subtotal) as total
FROM order_items
WHERE order_items.order_item_order_id IN 
    (SELECT order_id AS order_item_order_id FROM orders_corrected  
     WHERE order_status = 'COMPLETE' 
     AND year(order_datestr)=2014 AND month(order_datestr)=5 AND day(order_datestr)=17);

Outcome:
29198.830507278442

Q9.The result of the above query is in scientific notation. Rewrite the last query to format the value
in dollars and cents (e.g., $2000000.00).
Query:
SELECT  printf("$%.2f", sum(order_item_subtotal)) as total
FROM order_items
WHERE order_items.order_item_order_id IN 
    (SELECT order_id AS order_item_order_id FROM orders_corrected  
     WHERE order_status = 'COMPLETE' 
     AND year(order_datestr)=2014 AND month(order_datestr)=5 AND day(order_datestr)=17);
	 
Outcome:
$29198.83

HW3 Part2
---------------------------------------------------------------------------------------------------------------------------------------------
Q.Create a table named ratings for storing tab-delimited records using this structure:
Query:
CREATE TABLE IF NOT EXISTS ratings (
	posted TIMESTAMP, 
	cust_id INT, 
	prod_id INT, 
	rating TINYINT, 
	message STRING) 
COMMENT 'Ratings table'
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY '\t'
LINES TERMINATED BY '\n';

Outcome:
Success

Q. DESCRIBE ratings;
Outcome:
 	col_name	data_type	comment
	cust_id		int	
	message		string	
	posted		timestamp	
	prod_id		int	
	rating		tinyint	

Q. Finally, count the records in the ratings table to ensure that all 21,997 are available. how many ratings are there?
Query:
SELECT COUNT(*) FROM ratings;

Outcome:
21997

Create the following queries:
Q1.Select the HOME phone number
Query:
SELECT phone["HOME"] FROM loyalty_program
WHERE cust_id = 1200866;

Outcome:
408-555-4914

Q2.Select the third element from the order_ids array for customer ID 1200866
Query:
SELECT order_ids[2] FROM loyalty_program
WHERE cust_id = 1200866;

Outcome:
5278505

Q3.Select the total attribute from the order_value struct for customer ID 1200866
Query:
SELECT order_value.total FROM loyalty_program
WHERE cust_id = 1200866;

Outcome:
401874

Alter and Drop a Table
Q1.Use ALTER TABLE to rename the level column to status .
Query:

Outcome:
Q2.Use the DESCRIBE command on the loyalty_program table to verify the change.
Query:

Outcome:
Q3.Use ALTER TABLE to rename the entire table to reward_program.
Query:

Outcome:

Q4.Although the ALTER TABLE command often requires that we make a corresponding change to
the data in HDFS, renaming a table or column does not.
Query:

Outcome:

Q5.As sometimes happens in the corporate world, priorities have shifted and the program is now
canceled. Drop the reward_program table.
Query:

Outcome:
Q.
Query:

Outcome: